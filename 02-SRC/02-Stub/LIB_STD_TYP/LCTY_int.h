/******************************************************************************/
/* !Layer           : LIB                                                     */
/*																			  */
/* !Component       : LCTY						      						  */
/* !Description     : Compiler type                    .                      */
/*                                                                            */
/* !Module          : LCTY                                                    */
/* !Description     :                                                         */
/*                    %PCMS_HEADER_SUBSTITUTION_START%
   !File            : %PM%
   !ID description  : %PD% %PCMS_HEADER_SUBSTITUTION_END%
                                                                              */
/* !Scope           : Public                                                  */
/*                                                                            */
/* !Vendor          :                                                         */
/*                                                                            */
/* !Coding language : C                                                       */
/* !Project         : L012N1305 xBD GEN2                                      */
/* !Target          : Renesas RL78/F14                                        */
/*                                                                            */
/* !COPYRIGHT 2013 VALEO LIGHTING SYSTEM.                                     */
/* all rights reserved                                                        */
/******************************************************************************/
/* MODIFICATION LOG :                                                         */
/******************************************************************************/
/* !Designed by     : Si-Ky HO        @Date : 12/12/2013                      */
/*  									                                      */
/* !Coded by        : Si-Ky HO        @Date : 12/12/2013                      */
/*  									                                      */
/******************************************************************************/
/*  %PCMS_HEADER_SUBSTITUTION_START%
    %PL% %PCMS_HEADER_SUBSTITUTION_END%
 ******************************************************************************/

#ifndef LCTY_INT_H
#define LCTY_INT_H

/*-------------------Header Files included------------------------------------*/
#ifdef AUTOSAR_USED


/******************************************************************************/
/*--------------------------- C O N S T A N T S ------------------------------*/
/******************************************************************************/

/******************************************************************************/
/* !Comment : The short addressable area—saddr memory—consists of 256 bytes 
               of data memory in the address range 0xFFE20–0xFFF1F. 
               A saddr object can only be placed in saddr memory. 
               By using objects of this type, the code generated by the 
               compiler to access them is minimized. This means a smaller 
               footprint for the application, and faster execution at runtime.*/
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_SADDR_REG

/******************************************************************************/
/* !Comment  : The near memory consists of 64 Kbytes of data memory. 
               In hexadecimal notation, this is the address range 
               0xF0000–0xFFFFF. 
               A near object can only be placed in near memory.               */
/* !Trace_To : Covers_req_swc_cty_004                         */
/******************************************************************************/
#define LCTY_NEAR_DATA

/******************************************************************************/
/* !Comment  : The far memory consists of the whole 1 Mbytes of data memory. 
               In hexadecimal notation, this is the address range 
               0x00000–0xFFFFF. 
               A far object can only be placed in far memory, and the size of 
               such an object is limited to 64 Kbytes.                        */
/* !Trace_To : Covers_req_swc_cty_005                                         */
/******************************************************************************/
#define LCTY_FAR_DATA

/******************************************************************************/
/* !Comment  : The special function register (SFR) area is located in the 
               address range 0xFFF00–0xFFFFF. 
               Special function registers are defined in the device-specific 
               header files.                                                  */
/* !Trace_To : Covers_                                         */
/******************************************************************************/
#define LCTY_SFR

/******************************************************************************/
/* !Comment  : Function calls reach the first 64 Kbytes of memory 
               0-0x0FFFF. 
               The function can be called from anywhere in memory.            */
/* !Trace_To : Covers_                         */
/******************************************************************************/
#define LCTY_NEAR_FUNC

/******************************************************************************/
/* !Comment  : Function calls reach the entire 1 Mbyte memory 
               0-0xFFFFF. 
               The function can be called from anywhere in memory.            */
/* !Trace_To : Covers_                         */
/******************************************************************************/
#define LCTY_FAR_FUNC

/******************************************************************************/
/* !Comment  : This means that the initialization of the variable, 
              for example at system startup, is suppressed.                   */
/* !Trace_To : Covers_req_swc_cty_001                                         */
/******************************************************************************/
#define LCTY_NO_INIT

/******************************************************************************/
/* !Comment  : Definition of const variable that is not used in the program   */
/* !Trace_To : Covers_req_swc_cty_002                                         */
/******************************************************************************/
#define LCTY_ROOT

/******************************************************************************/
/* !Comment : Interruption definition                                         */
/* !Trace_To : Covers_req_swc_cty_003                                         */
/******************************************************************************/
#define LCTY_INTERRUPT

/******************************************************************************/
/* !Comment : Special function Register 8 bits addressed definition           */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_SFR_REG

/******************************************************************************/
/* !Comment : Register 8 bits addressed definition                            */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_REG

/******************************************************************************/
/* !Comment : @ defintion                                                     */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_IO(addr)

/******************************************************************************/
/* !Comment : For data objects declared __no_bit_access, the use of bit 
              instructions is suppressed individual bits of the object are 
              accessed.                                                       */
/* !Trace_To : Covers_                          */
/******************************************************************************/
#define LCTY_NO_BIT_ACCESS

#define LCTY_vidNOP()

/******************************************************************************/
/*------------------------ F O N C T I O N S ---------------------------------*/
/******************************************************************************/


#else


/******************************************************************************/
/*--------------------------- C O N S T A N T S ------------------------------*/
/******************************************************************************/

/******************************************************************************/
/* !Comment : The short addressable area—saddr memory—consists of 256 bytes
               of data memory in the address range 0xFFE20–0xFFF1F.
               A saddr object can only be placed in saddr memory.
               By using objects of this type, the code generated by the
               compiler to access them is minimized. This means a smaller
               footprint for the application, and faster execution at runtime.*/
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_SADDR_REG __saddr LCTY_NO_INIT volatile
/******************************************************************************/
/* !Comment  : The near memory consists of 64 Kbytes of data memory.
               In hexadecimal notation, this is the address range
               0xF0000–0xFFFFF.
               A near object can only be placed in near memory.               */
/* !Trace_To : Covers_req_swc_cty_004                         */
/******************************************************************************/
#define LCTY_NEAR_DATA  __near

/******************************************************************************/
/* !Comment  : The far memory consists of the whole 1 Mbytes of data memory.
               In hexadecimal notation, this is the address range
               0x00000–0xFFFFF.
               A far object can only be placed in far memory, and the size of
               such an object is limited to 64 Kbytes.                        */
/* !Trace_To : Covers_req_swc_cty_005                                         */
/******************************************************************************/
#define LCTY_FAR_DATA  __far

/******************************************************************************/
/* !Comment  : The special function register (SFR) area is located in the
               address range 0xFFF00–0xFFFFF.
               Special function registers are defined in the device-specific
               header files.                                                  */
/* !Trace_To : Covers_                                         */
/******************************************************************************/
#define LCTY_SFR       __sfr

/******************************************************************************/
/* !Comment  : Function calls reach the first 64 Kbytes of memory
               0-0x0FFFF.
               The function can be called from anywhere in memory.            */
/* !Trace_To : Covers_                         */
/******************************************************************************/
#define LCTY_NEAR_FUNC  __near_func

/******************************************************************************/
/* !Comment  : Function calls reach the entire 1 Mbyte memory
               0-0xFFFFF.
               The function can be called from anywhere in memory.            */
/* !Trace_To : Covers_                         */
/******************************************************************************/
#define LCTY_FAR_FUNC  __far_func

/******************************************************************************/
/* !Comment  : This means that the initialization of the variable,
              for example at system startup, is suppressed.                   */
/* !Trace_To : Covers_req_swc_cty_001                                         */
/******************************************************************************/
#define LCTY_NO_INIT __no_init

/******************************************************************************/
/* !Comment  : Definition of const variable that is not used in the program   */
/* !Trace_To : Covers_req_swc_cty_002                                         */
/******************************************************************************/
#define LCTY_ROOT __root

/******************************************************************************/
/* !Comment : Interruption definition                                         */
/* !Trace_To : Covers_req_swc_cty_003                                         */
/******************************************************************************/
#define LCTY_INTERRUPT __interrupt

/******************************************************************************/
/* !Comment : Special function Register 8 bits addressed definition           */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_SFR_REG LCTY_SFR LCTY_NO_INIT volatile

/******************************************************************************/
/* !Comment : Register 8 bits addressed definition                            */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_REG LCTY_NO_INIT volatile

/******************************************************************************/
/* !Comment : @ defintion                                                     */
/* !Trace_To : Covers_req_swc_cty_xxx                                         */
/******************************************************************************/
#define LCTY_IO(addr) @(addr)

/******************************************************************************/
/* !Comment : For data objects declared __no_bit_access, the use of bit
              instructions is suppressed individual bits of the object are
              accessed.                                                       */
/* !Trace_To : Covers_                          */
/******************************************************************************/
#define LCTY_NO_BIT_ACCESS         __no_bit_access

#define LCTY_vidNOP()              __no_operation()

/******************************************************************************/
/*------------------------ F O N C T I O N S ---------------------------------*/
/******************************************************************************/

__intrinsic void __no_operation(void);
__intrinsic void __halt(void);
__intrinsic void __stop(void);
__intrinsic void __break(void);


#if __CORE__ == __RL78_2__
__intrinsic void __mach(signed short, signed short);
__intrinsic void __machu(unsigned short, unsigned short);

#endif

#pragma language=default

#endif /* AUTOSAR_USED */



#endif /* LCTY_INT_H */

/*************************** E N D (LCTY_int.h) ********************************/

